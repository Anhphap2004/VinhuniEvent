@model IEnumerable<VinhuniEvent.Areas.Admin.Controllers.AttendanceViewModel>
@{
    ViewData["Title"] = "Điểm danh sự kiện";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper p-4">
    <h4 class="fw-bold text-primary mb-4">
        <i class="fa-solid fa-clipboard-check me-2"></i>
        Điểm danh sinh viên tham gia sự kiện:
        <span class="text-dark">@ViewBag.EventTitle</span>
    </h4>

    @if (Model != null && Model.Any())
    {
        <div class="alert alert-info">
            <i class="fa-solid fa-info-circle me-2"></i>
            Tổng số sinh viên đăng ký: <strong>@Model.Count()</strong> |
            Đã điểm danh: <strong>@Model.Count(x => x.IsPresent != null)</strong> |
            Có mặt: <strong class="text-success">@Model.Count(x => x.IsPresent == true)</strong> |
            Vắng: <strong class="text-danger">@Model.Count(x => x.IsPresent == false)</strong>
        </div>

        <div id="messageBox" class="alert alert-success" style="display:none;" role="alert">
            <i class="fa-solid fa-check-circle me-2"></i>
            <span id="messageText"></span>
        </div>

        <table class="table table-bordered align-middle">
            <thead class="table-light text-center">
                <tr>
                    <th style="width: 8%">STT</th>
                    <th style="width: 25%">Họ tên</th>
                    <th style="width: 15%">Mã SV</th>
                    <th style="width: 17%">Trạng thái</th>
                    <th style="width: 35%">Điểm danh</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int stt = 1;
                }
                @foreach (var item in Model)
                {
                    var statusClass = item.IsPresent == true ? "table-success" :
                    item.IsPresent == false ? "table-danger" : "";
                    var statusText = item.IsPresent == true ? "Có mặt" :
                    item.IsPresent == false ? "Vắng" : "Chưa điểm danh";

                    <tr class="text-center @statusClass" id="row-@item.UserId">
                        <td>@(stt++)</td>
                        <td class="text-start">@item.FullName</td>
                        <td>@item.StudentCode</td>
                        <td class="fw-bold" id="status-@item.UserId">@statusText</td>
                        <td>
                            <button class="btn btn-sm btn-success me-1"
                                    onclick="updateAttendance(@ViewBag.EventId, @item.UserId, true)">
                                <i class="fa-solid fa-check"></i> Có mặt
                            </button>
                            <button class="btn btn-sm btn-danger"
                                    onclick="updateAttendance(@ViewBag.EventId, @item.UserId, false)">
                                <i class="fa-solid fa-xmark"></i> Vắng
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-warning">
            <i class="fa-solid fa-exclamation-triangle me-2"></i>
            Không có sinh viên nào đăng ký sự kiện này.
        </div>
    }

    <div class="mt-3">
        <a asp-action="ByEvent" asp-route-id="@ViewBag.EventId" class="btn btn-outline-secondary">
            <i class="fa-solid fa-arrow-left me-1"></i> Quay lại
        </a>
    </div>
</div>

@section Scripts {
    <script>
        function updateAttendance(eventId, userId, isPresent) {
            console.log('Bắt đầu điểm danh:', eventId, userId, isPresent);

            // Tạo FormData
            const formData = new URLSearchParams();
            formData.append('eventId', eventId);
            formData.append('userId', userId);
            formData.append('isPresent', isPresent);

            // Gửi request bằng fetch API
            fetch('/Admin/EventRegistrations/UpdateAttendance', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: formData.toString()
            })
            .then(response => {
                console.log('Response status:', response.status);
                if (!response.ok) {
                    throw new Error('HTTP error! status: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                console.log('Response data:', data);

                if (data.success) {
                    // Cập nhật giao diện
                    const row = document.getElementById('row-' + userId);
                    const statusCell = document.getElementById('status-' + userId);

                    if (row && statusCell) {
                        // Xóa class cũ
                        row.classList.remove('table-success', 'table-danger');

                        // Thêm class mới
                        if (isPresent) {
                            row.classList.add('table-success');
                            statusCell.textContent = 'Có mặt';
                        } else {
                            row.classList.add('table-danger');
                            statusCell.textContent = 'Vắng';
                        }

                        // Hiển thị thông báo thành công
                        showMessage('Cập nhật điểm danh thành công!', 'success');
                    }
                } else {
                    showMessage('Có lỗi xảy ra: ' + (data.message || 'Vui lòng thử lại'), 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Lỗi kết nối: ' + error.message, 'danger');
            });
        }

        function showMessage(message, type) {
            const messageBox = document.getElementById('messageBox');
            const messageText = document.getElementById('messageText');

            if (messageBox && messageText) {
                messageText.textContent = message;
                messageBox.className = 'alert alert-' + type;
                messageBox.style.display = 'block';

                // Tự động ẩn sau 3 giây
                setTimeout(function() {
                    messageBox.style.display = 'none';
                }, 3000);
            }
        }
    </script>
}